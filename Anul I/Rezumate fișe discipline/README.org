#+TITLE: Rezumate fișe disciplină anul I (2020-2021)
#+OPTIONS: toc:3

:PROPERTIES:
:UNNUMBERED: notoc
:END:
* Cuprins
:PROPERTIES:
:TOC:      :include all :depth 2 :ignore this
:END:
:CONTENTS:
- [[#semestrul-i][Semestrul I]]
  - [[#analiză-matematică][Analiză matematică]]
  - [[#baze-de-date][Baze de date]]
  - [[#fundamentele-programării][Fundamentele programării]]
  - [[#interfețe-om-calculator][Interfețe om-calculator]]
  - [[#medii-și-instrumente-de-programare][Medii și instrumente de programare]]
- [[#semestrul-ii][Semestrul II]]
  - [[#algoritmi-fundamentali][Algoritmi fundamentali]]
  - [[#arhitectura-sistemelor-de-calcul][Arhitectura sistemelor de calcul]]
  - [[#fundamentele-algebrice-ale-informaticii][Fundamentele algebrice ale informaticii]]
  - [[#geometrie-computațională][Geometrie computațională]]
  - [[#programare-orientată-obiect][Programare orientată obiect]]
  - [[#structuri-de-date][Structuri de date]]
:END:


* Semestrul I
** Analiză matematică
*** Disciplina
Analiză matematică/Mathematical analysis

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-

*** Conținutul disciplinei
**** Introducere
Obiectul de studiu al calculului diferențial și integral. Mulţimea numerelor
reale - reprezentare zecimală, axioma Cantor-Dedekind. Ecuații și inecuații cu
modul. Funcții elementare.

**** Capitolul I: Şiruri şi serii de numere reale

Mulţimea numerelor reale. Şiruri de numere reale: limita unui şir, şir
convergent, şir fundamental. Dreapta reală încheiată. Serii numerice -
condiţii necesare, condiţii suficiente de convergenţă. Operaţii cu
serii. Criterii de convergenţă pentru serii cu termeni pozitivi. Criteriul
rădăcinii, criteriul raportului. Serii de puteri.

**** Capitolul II: Funcţii de mai multe variabile. Limite şi continuitate

Spaţiul euclidian R^n - produs scalar, normă şi distanţă. Şiruri de vectori
din R^n. Funcţii vectoriale de o variabilă reală.  Limite şi continuitate
pentru funcţii de n variabile. Limita după o direcţie, limite iterate.

**** Capitolul III: Funcții diferențiabile
Derivate parţiale (într-un punct şi pe o mulţime). Derivata după o
direcţie. Operatori diferenţiali în teoria cîmpurilor: gradient, divergenţă,
rotor. Matrice jacobiană, determinant funcţional. Derivate parţiale de ordin
superior. Diferenţiala unei funcţii de mai multe variabile. Aplicaţii ale
diferenţialei în calculul cu aproximări. Diferenţierea şi derivarea funcţiilor
compuse. Derivate parțiale și diferenţiale de ordin superior.

**** Capitolul IV: Formula lui Taylor. Extreme locale ale funcţiilor de mai multe variabile

Formula lui Taylor pentru funcţii de una sau mai multe variabile. Aplicaţii în
determinarea extremelor locale ale funcţiilor de mai multe variabile. Teorema
lui Fermat pentru funcţii de mai multe variabile. Studiul punctelor de extrem
cu ajutorul diferenţialei a doua.

**** Capitolul V: Integrarea funcţiilor de o variabilă

Primitive. Integrala Riemann, Integrale improprii de speţa I şi de speţa a
doua. Studiul convergenţei integralelor improprii.

**** Capitolul VI: Integrale curbilinii

Curbe plane şi în spaţiu. Ecuaţii parametrice. Element de arc. Integrala
curbilinie de speţa I. Definiţie, aplicaţii, Integrala curbilinie de speţa a
doua. Lucru mecanic, Independenţa de drum a integralelor curbilinii de speţa a
doua

*** Bibliografia minimală obligatorie
- Miron Nicolescu, Nicolae Dinculeanu şi Solomon Marcus - /Analiză
  matematică/, vol. 1, Editura Didactică şi Pedagogică, Bucureşti, Ediţia IV (1971) sau Ediţia V (1981).
- M. Mocanu, /Matematici aplicate 1 (Analiză matematică)/, Editura Alma Mater,
  Bacău, 2007.
- I. Crăciun - /[[http://www.mec.tuiasi.ro/diverse/analiza_matematica_calcul_diferential.pdf][Analiză matematică. Calcul diferenţial]]/, Universitatea Tehnică
  “Gh. Asachi”, Iaşi, 2011
- I. Crăciun - /[[http://www.mec.tuiasi.ro/diverse/analiza_matematica_calcul_integral.pdf][Analiză matematică. Calcul integral]]/, Editura PIM, Iaşi, 2007
- S. Chiriţă - /[[https://www.academia.edu/19535189/78351889-Probleme-de-Matematici-Superioare-Stan-Chirita][Probleme de matematici superioare]]/, Editura Didactică şi
  Pedagogică, Bucureşti, 1989

*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: 2 x 14 = 28
  - Laborator: -
  - Proiect: -
- Număr de credite: 6

*** Procedura de evaluare a cunoștințelor
Examen

*** Evaluare pe parcurs
Temă de casă
** Baze de date

*** Disciplina
Baze de date/Databases

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
**** Capitolul 1: Introducere
Definiţii. Proprietăţi. Exemple. Schemele: externă, conceptuală,
internă. Proiectarea bazelor de date. Baze de date
relaţionale. Chei. Reguli de integritate a datelor. Modelarea logică a
datelor.  Vederile utilizatorilor. Construirea unei vederi
utilizator. Integrarea vederilor utilizatorilor.
**** Capitolul 2: Algebra relațională
Operatori peste mulţimi. Operatori specifici. Utilizarea algebrei relaţionale.
**** Capitolul 3: Modelul entitate-relație
Concepte fundamentale şi avansate. Transformarea modelului E-R în
model relaţional
**** Capitolul 4: Normalizarea relațiilor
Dependențe funcţionale. Dependenţe multivaloare. Dependenţe
joncţiune. Forme normale.  Normalizarea relaţiilor.
**** Capitolul 5: Tranzacții
Definire. Proprietăţi. Stările unei tranzacţii. Utilizarea
tranzacţiilor la reconstituirea conţinutului bazei de date. Utilizarea
tranzacţiilor în rezolvarea problemelor accesului concurent la date.
Utilizarea mărcilor de timp.
**** Capitolul 6: Baze de date distribuite
Definiţii. Arhitecturi.
**** Capitolul 7: Data mining, Big Data, NoSQL
Gestionarea colecţiilor moderne de date

*** Bibliografia minimală obligatorie
- Octavian Bîscă, /Baze de date/, Ed. All, Bucureşti, 1997
- Pavel Năstase şi colectiv, /Microsoft Access/, Ed. Teora, Bucureşti, 2000
- Gh. Popa, Al. Ştefănescu, V. Stanciu, V. Ivancenco, V. Ţintă, /Sisteme de gestiune a bazelor de date : dBase IV, Oracle/, Ed. All, Bucureşti, 1998
- I. Lungu, C. Bodea, G. Bădescu, C. Ioniţă, /Baze de date. Organizare, proiectare şi implementare/, Ed. All, Bucureşti, 1995
*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 2 x 14 = 28
  - Proiect: -
- Număr de credite: 5

*** Procedura de evaluare a cunoștințelor
Examen

** Fundamentele programării
*** Disciplina
Fundamentele programării/ Fundamentals of programming

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-

*** Conținutul disciplinei
**** Capitolul 1: Introducere
Paradigme ale programării. Exemplificări.
**** Capitolul 2: Algoritmi
Etapele rezolvării unei probleme, Definiţia algoritmului,
Caracteristicile algoritmilor. Reprezentări.
**** Capitolul 3: Date
 Constante şi variabile. Expresii, Tipuri de date simple, Tipuri de
 date structurate.
**** Capitolul 4: Elementele programării structurate
 Structurile de bază, auxiliare. Teorema programării structurate,
 Instrucţiunea de atribuire. Operaţii de intrare şi ieşire,
 Implementarea structurilor de control, Exemple de algoritmi,
 Complexitatea algoritmilor
**** Capitolul 5: Vectori și înregistrări
 Definire vectori/structuri ca tip de date. Citire, afişare, exemple.
 Sortare, interclasare
**** Capitolul 6: Pointeri și referințe
 Tipul pointer. Tipul referinţă. Noţiunea de variabilă dinamică. Liste
**** Capitolul 7: Subprograme
 Definirea subprogramelor, Circuitul datelor între subprograme
**** Capitolul 8: Recursivitate
 Prezentare generală, Funcţii recursive, Proceduri recursive, Metoda
Divide- et-impera, Probleme ale căror rezolvări se pot defini în
termeni recursivi
**** Capitolul 9: Șiruri de caractere
 Prelucrări. Exemple de aplicaţii.
**** Capitolul 10: Fișiere
 Tipuri de fisiere. Operatii cu fisiere. Aplicatii.
**** Capitolul 11: Probleme recapitulative
Aplicaţii diverse cu caracter recapitulativ al materiei de curs 
*** Bibliografia minimală obligatorie
- Bogdan Pătruţ, /Aplicaţii în C şi C++/, Editura Teora, Bucureşti, 1998
- B. Kernigham, D. Ritchie - /Limbajul de programare C/, Ed. Teora, orice ediție
- E. Nechita, G. C. Crişan, I.M. Furdu, /Îndrumar de laborator C/C++/, regim intern, disponibil
la http://www.infoifr.ub.ro (se va solicita parola)
- Furdu I. – /Programare procedurală/ - note de curs, draft, disponibil la http://www.infoifr.ub.ro
(se va solicita parola)
*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 2 x 14 = 28
  - Proiect: -
- Număr de credite: 6

*** Procedura de evaluare a cunoștințelor
Examen
** Interfețe om-calculator
*** Disciplina
Interfețe om-calculator/Human-computer interfaces

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-

*** Conținutul disciplinei
Domeniul interacţiunii om-calculator/maşină (H.C.I.- Human-Computer
Interaction).  Factorul uman (utilizatorul) - participant la
interacțiune și comunicare interactivă. (capacitati, limitari fizice,
cognitive și aspecte afective).  Modele, stiluri, paradigme de
interactiune; Procesul de proiectare a interactiunii; Utilizatorul:
centrul procesului de proiectare; Principii şi paradigme ale
utilizabilității interfetelor. Metode de evaluare a utilizabilitatii.
Designul interfeței cu utilizatorul: principii, modele și
tipuri. Metodologii de analiză şi proiectare a interfeței (centrată pe
utilizator și pe sarcini). Componente, Obiectele de interfaţă.
Organizarea datelor. paradigma WIMP. Dispozitive de intrare (controale
grafice). Dispozitive de ieșire (Componente. Avertismente).  Calitatea
interfeţei. Tehnici, metrici, metode de observare și evaluare a
utilizabilităţii interfeţelor om-calculator si a sistemelor
interactive.  Afectivitate, erori, excepții şi
riscuri. Preferințele/cerințele utilizatorilor. Educarea și instruirea
utilizatorilor; Identitate vizuală & Reputaţia/prezentare interfeţei
(programului). Instrumente şi suportul (pachete program) pentru
implementarea interfeţelor.  Comunicarea orală om-maşină. Interfete și
sisteme haptice.(Sinteza vorbirii; Mecanisme de generare a limbajului
natural; Recunoasterea vorbirii).  Interfeţe inteligente. Agenți de
interfață. Interacțiunea multimodală. Realitatea augmentată și
realitatea virtuală.  Tool-uri de proiectare a interfeței (pentru
prototipuri de interfață).  Asigurarea interacţiunii om-calculator
prin intermediul instrumentelor Web, Sisteme inteligente de dialog
(Proiectarea si implementarea sistemelor de dialog; Sistemul de dialog
DIASYS bazat pe sisteme master-slave cu scheme semantice) Interfete
bazate pe limbaj natural (Studii de caz- Analiza, modelarea,
proiectarea, implementarea si evaluarea interfetelor om-calculator.)
*** Bibliografia minimală obligatorie
- Pruteanu E., /Interacțiunea om-calculator/mașină/ Ed. Alma Mater, Bacau 2016
- Cursuri si laboratoare: http://examene.pe.ub.ro/, http://cadredidactice.ub.ro/pruteanue/
- Trăuşan-Matu, S., /Interfaţarea evoluată om-calculator/, Matrix Rom, Bucureşti, 2015
- Dix, A.J., J.E. Finlay, G.D. Abowd, /Human-Computer Interaction/, Prentice Hall, 2009
- Mihaela Colhon, /Human-Computer Interaction/ (Note de curs), Editura SITECH Craiova (2014)
*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 2 x 14 = 28
  - Proiect: -
- Număr de credite: 5

*** Procedura de evaluare a cunoștințelor
Examen

** Medii și instrumente de programare
*** Disciplina
Medii și instrumente de programare/Software development tools and environments

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-

*** Conținutul disciplinei
**** Capitolul 1: Introducere
Care este obiectul de studiu al disciplinei /Medii de programare/ și ce loc
ocupă aceasta în cadrul disciplinelor informatice. Mediul de programare Gambas:
Arhitectura mediului de programare, IDE-ul, Schema și componente suplimentare. O
duzina de întrebări la care căutam răspuns cînd învățăm un limbaj de programare.

**** Capitolul 2. Date simple 
Constante şi variabile. Expresii - ce sînt şi la ce folosesc, cum se formează
expresiile, sintaxa expresiilor. Tipuri de date simple - cum se reprezintă
diferite date în calculator. Operații cu tipurile de date simple. Tipuri de date
speciale: timp și data calendaristică. Era Gambas. Tipuri de date de uz general:
Tipul =Variant=. Controalele sînt simultan și date, controale din mediul Gambas,
structura și obiect descrise într-un fișier =class=. Alte tipuri de date tratate
ca tipuri simple. Tendințe și direcții de dezvoltare a mediilor vizuale și
limbajelor acestora.

**** Capitolul 3. Date structurate I: Vectori și matrice, liste sau colecții
Tipuri de date structurate - noţiunea de tablou, matrice, notația cu [] la
vectori. Tipuri de date structurate - noţiunea de listă sau colecție,
notația cu [] la liste, Liste de elemente, liste de controale, operații
asupra listelor, construirea dinamică a unei liste, procesarea iterativă sau
recursivă a listelor, reprezentarea prin desen a listelor.

**** Capitolul 4: Date structurate II: Structuri, obiecte, clasă, imagine
Tipuri de date structurate - noţiunea de structură, record, obiect, clasă. Cum
devine programul un fisier class, adică o clasă. Crearea dinamică a elementelor
unui vector de controale (obiecte) în Gambas cu =New=. Diferente Gambas/Visual
Basic în materie de folosire a matricelor Controale care conțin o imagine.
PictureBox și folosirea sa. Inițializare cu diverse formate de imagine,
utilizare. Extensii de fișiere imagine.

**** Capitolul 5: Elementele programării structurate
Cod cu structură nerepetitivă: structura liniară, cu exemple. Cod cu
structura nerepetitivă: structurile alternative, =If= și respectiv
=Select=, cu exemple. Structurile repetitive. Condiționare anterioară
sau posterioară, diferențe între concepte, exemple.  Structurile
auxiliare: structura =With= pentru acces la cîmpuri/atribute,
funcții/metode. Structurile auxiliare: structura =For Each= pentru
parcurgere de liste și colecții. Instrucţiunea de atribuire. Operaţii
de intrare şi iesire - semantică, utilizare. Variații de sintaxă a
structurilor de control - cum se descriu elementele programării
structurate în cazul unor limbaje de programare diferite.  Exemple de
algoritmi - se vor proiecta algoritmi pentru calcule simple
matematice, financiar-contabile, dar şi algoritmi mai complecşi de
căutare, sortare etc.
**** Capitolul 6: Subprograme
Programarea structurată tradițională, conceptul de
funcție/procedură/metodă care necesita execuție de cod, rolul
subprogramelor în acest context. Programarea vizuală bazată pe
evenimente, conceptul de eveniment care necesita execuție de cod,
rolul subprogramelor în acest context. Definirea subprogramelor -
procedurile, (sub)rutinele, funcţiile - şi cum se declară şi se
definesc ele în cadrul unui program; exemplificări în diferite limbaje
de programare. Circuitul datelor între subprograme - cum se apelează
subprogramele, modalităţi de transmitere a parametrilor, apel prin
valoare, apel prin referința, apel prin nume, =ByRef= și respectiv
=ByVal=. Atenție: Evenimentul =Change()= și propagarea modificarilor.
**** Capitolul 7: Noțiunile de bază ale programării vizuale
Consideraţii generale - ce este programarea vizuală şi prin ce se
deosebeşte de alte paradigme. Forme - ce sînt formele. Controale şi
proprietăţile lor - ce sînt controalele şi cum se proiectează
interfaţa unei aplicaţii vizuale. Evenimente - ce sînt evenimentele, ce
evenimente pot apărea asupra diferitelor controale şi cum pot fi ele
folosite. Legarea evenimentelor de controale - cum se realizează
legătura între controale şi diferitele evenimente ce pot avea loc
asupra lor; scrierea codului subrutinelor şi realizarea programului.
Proprietăţi/Atribute şi metode - ce sînt acestea şi cum se folosesc.
Resurse suplimentare folosite de programe
**** Capitolele 8-11: Exemple de programare în mediul vizual
***** Partea I
Pornirea mediului de programare vizual. Calcule cu date în consolă.
Primul tău program. Un salut special pentru tine! =Message.Info=, alte
mesaje. Un calculator cu operaţii aritmetice în Visual Basic/Un
calculator cu operatii aritmetice și =SpinBox=-uri în
Gambas. =ListBox=, liste şi modificarea listelor.
***** Partea II
Utilizarea instrucțiunilor =Case= și =If=. Procesarea evenimentului
=Change()=.  Cadre (Frame-uri) și RadioButoane. Exemplul cu opțiunea
fumatorului.  Jocul BatalieNumerica – Studiu de caz. (versiuni
succesive în dezvoltare).  =ProgressBar= – ghidat prin
program. =ProgressBar= – ghidat de timere.  Controale din setul Qt:
=Slider=, =Dial=, =LCDNumber=, etc.  =TabStrip=. Interfețe cu tab-uri.
***** Partea III
Vector de controale, grup de butoane, eveniment atașat de grup,
Tooltip, (inclusiv =With=), Entitatea/Obiectul Last – ultimul control
acționat.  Căutare în =ListBox= cu algoritm explicit sau metoda
existența Colectii. Colecții de PictureBox-uri. Timere.  CheckBox-uri
și colectarea opțiunilor bifate într-o colecție indexabilă.  Alocare
dinamica cu =New= a unor obiecte.  Funcții și subrutine. Transferul
rezultatelor prin valoare respectiv prin referință.
***** Partea IV
Obiecte agregate sau cînd structurile au în interior alte date
structurate sau alte obiecte. Exemplu cu JackPot-ul. Aflarea
coordonatelor mouse-ului. Experiment pentru a compara transferul prin
referinta și transferul prin valoare.  Fișiere: Open, Handle, Print,
Input. Scrierea în fisiere text, Citirea din fisiere text.  Vectori de
structuri utilizator sau de obiecte. Ex. cu palatul. Acces la
elementele vectorului de structuri/obiecte.  Initializari cu subrutina
=_new()=. Maniera POO de inițializare.  Un joc cu imagini şi
cronometre. Grafice. Fişiere text - să salvam şi să restauram datele

**** Capitolul 12: Conceptele programării orientate pe obiecte
Introducere - o iniţiere intuitivă în teoria programării orientate pe
obiecte, cu exemplificări din lumea reală. Definirea claselor - cum se
definesc clasele, cîmpuri şi metode, cîmpuri private şi publice;
exemplificări în diferite limbaje de programare obiectuală, Static.
Derivare - realizarea derivării unei clase din alta clasă, moştenirea
atributelor și metodelor. Agregarea obiectelor. Implementări: Problema
clientului de la CEC. Jocul Jackpot
*** Bibliografia minimală obligatorie
- /Microsoft Visual Basic 6.0 Ghidul programatorului/, Ed.Teora, 1998
- John W. Rittinghouse, /[[http://distro.ibiblio.org/vectorlinux/Uelsk8s/GAMBAS/gambas-beginner-guide.pdf][A Beginner's Guide to Gambas]]/, e-book, 2005
- B. Pătruţ, /Aplicaţii în VB/, Teora, 2000
- Daniel Campos, Jose Luis Redrejo, /[[https://openlibra.com/es/book/gambas-programacion-visual-con-software-libre][Gambas – Programacion visual cons
  Software Libre]]/, e-book, 2009
- Gambas, site-uri: http://gambas.sourceforge.net/en/main.html, http://gambaswiki.org/wiki
- Ubuntu Linux > 16.04, Fedora Linux > 25 sau altă distribuție de Linux recentă
*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 2 x 14 = 28
  - Proiect: -
- Număr de credite: 6

*** Procedura de evaluare a cunoștințelor
Examen


* Semestrul II
** Algoritmi fundamentali
*** Disciplina
Algoritmi fundamentali/Fundamental algorithms

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
1. Algoritmi. Complexitatea algoritmilor. Determinări.
2. Algoritmi de determinare a unor valori numerice
3. Căutare. Căutarea secvenţială, căutarea binară
4. Algoritmi de prelucrări numerice pe vectori
5. Algoritmi de prelucrări pe șiruri de caractere
6. Algoritmi de prelucrări numerice pe tablouri bidimensionale
7. Algoritmi de sortare
8. Algoritmi probabilistici
9. Algoritmi tip Greedy
10. Hashing
11. Sinteze, recapitulare
*** Bibliografia minimală obligatorie
- Rodica Brînzei, /Proiectarea şi analiza algoritmilor/, Ed.Univ. “Al.I.Cuza” Iaşi, 1995.
- Thomas H.Cormen, Charles E.Leiserson, Ronald R.Rivest, /Introducere în Algoritmi/, Agora
Press, Traducere.
- Mitchell Wat şi Robert Lafere, /Structuri de date şi algoritmi in Java/, Teora, 1999.
- Ioan Tomescu, /Date structures/, Editura Universităţii din Bucureşti, 2004.
- M. Talmaciu, I. Furdu, /Algoritmi şi structuri de date/, note de curs, Ed. Alma Mater, 2008
   
*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: 2 x 14 = 28
  - Laborator: -
  - Proiect: -
- Număr de credite: 5

*** Procedura de evaluare a cunoștințelor
Examen


** Arhitectura sistemelor de calcul

*** Disciplina
Arhitectura sistemelor de calcul/Architecture of computing systems

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
Cunoaşterea principalelor tipuri de arhitecturi utilizate la sistemele
de calcul.  Dobîndirea de cunoştinţe privind modul de funcţionare şi
utilizare a elementelor componente din structura unui calculator.
Dezvoltarea aptitudinilor de programare a structurii hardware.

*** Bibliografia minimală obligatorie
- Rotar Dan, /Arhitectura sistemelor de calcul/, Curs în format electronic, 2013
- Pîrvulescu Lucian, /Arhitectura sistemelor de calcul/, Îndrumar de aplicații. Editura Matrix
Rom, București, 2015
- Baruch Z. F., /Arhitectura calculatoarelor/, Editura Todesco, Cluj-Napoca, 2001
*** Fond de timp alocat pe forme de activitate
- Semestrul: 2
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 1 x 14 = 14
  - Proiect: -
- Număr de credite: 4

*** Procedura de evaluare a cunoștințelor
Examen

** Fundamentele algebrice ale informaticii

*** Disciplina
Fundamentele algebrice ale informaticii/Algebraic foundations of computer
science

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
**** Unitatea 1. Monoizi
Grupoizi, teorema asociativității generale, monoizi
**** Unitatea 2. Grupuri
Grupuri, subgrupuri, congruențe într-un grup, teorema lui Lagrange,
divizori normali, grupuri factor, morfisme de grupuri, teoreme de
izomorfism pentru grupuri, grupuri de permutări, acțiunea unui grup
asupra unei mulțimi.
**** Unitatea 3. Inele și corpuri
Inele și corpuri, ideale, inele factor, morfisme de inele, teoreme de
izomorfism pentru inele, inele de polinoame
*** Bibliografia minimală obligatorie
- M. Becheanu şi colab., /Algebră pentru perfecţionarea profesorilor/, EDP, Bucureşti, 1983
- Dragomir, A. Dragomir, /Structuri algebrice/, Ed. Facla, Timişoara, 1981
- C. Năstăsescu, C. Niţă, C. Vraciu, /Bazele algebrei/. Vol. I, Ed. Academiei, Bucureşti, 1986
- G. Pic, I. Purdea, /Tratat de algebră modernă/. Vol. I, II, Ed. Academiei, Bucureşti, 1977, 1982
- V. Nimineț, Algebră, /Note de curs/, suport electronic, 2013.
*** Fond de timp alocat pe forme de activitate
- Semestrul: 2
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: 1 x 14 = 14
  - Laborator: -
  - Proiect: -
- Număr de credite: 5

*** Procedura de evaluare a cunoștințelor
Examen
** Geometrie computațională

*** Disciplina
Geometrie computațională / Computational geometry

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
**** Capitolul 1: Curbe în plan
Definiţii. Reprezentări analitice ale curbelor în plan. Tangentă şi
normală într-un punct al unei curbe în plan. Lungimea unui arc de
curbă plană. Parametrizaţii naturale. Reperul Serret-Frenet într-un
punct al unei curbe plane. Curbură. Teorema fundamentală a geometriei
curbelor plane. Forma arcului unei curbe plane în vecinătatea unui
punct. Puncte singulare
**** Capitolul 2: Curbe în spațiul euclidian E³
Definiţia curbelor în spaţiul euclidian E³. Reprezentări analitice ale
curbelor în spaţiul euclidian E³. Tangentă şi plan normal într-un punct
al unei curbe în spaţiu. Lungimea unui arc de curbă în
spaţiu. Parametrizaţii naturale. Planul osculator într-un punct
neinflexionar al unei curbe în spaţiu. Formulele lui Frenet pentru o
curbă în spaţiu. Interpretări geometrice ale funcţiei curbură şi
funcţiei torsiune. Formulele de calcul pentru curbură şi torsiune.
**** Capitolul 3: Suprafețe
Definiţia suprafeţei în spaţiul euclidian E³. Reprezentări analitice
ale suprafeţelor. Curbe pe o suprafaţă. Spaţiul tangent într-un punct
al unei suprafeţe. Planul tangent într-un punct al suprafeţei. Normala
la suprafaţă. Forma I-a fundamentală a unei suprafeţe. Aplicaţii ale
formei I-a fundamentale. Formulele lui Gauss. Formulele lui
Weingarten. Forma a II-a fundamentală a unei suprafeţe. Curbura
normală. Direcţii asimptotice. Linii asimptotice. Direcţii principale
într-un punct al unei suprafeţe. Linii de curbură. Curburi
principale. Curbură totală. Curbura medie. Curbe pe o
suprafaţă. Geodezice
**** Capitolul 4: Proiectarea algoritmică a curbelor în plan și spațiu
Probleme de trasare a curbelor în plan şi în spaţiu. Interpolarea cu
ajutorul polinoamelor. Curbe Ferguson. Curbe Bézier. Funcţii şi curbe
spline
*** Bibliografia minimală obligatorie
1. Nimineț V. /Geometrie computațională/, Ed. Alma Mater, Bacau, 2013.
2. Nimineț V, Muraru C., /Geometrie computațională cu aplicații in Matlab/, Ed. Pim, Iasi, 2009.
3. Blănuţă V, Nimineţ V., /Geometrie diferenţială/, Editura Performantica, Iaşi, 2007.
4.. Oproiu V., /Geometria computaţională a curbelor şi suprafeţelor/, Editura Universităţii “Al. I.
Cuza” Iaşi, 2003.
*** Fond de timp alocat pe forme de activitate
- Semestrul: 2
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: 1 x 14 = 14
  - Laborator: -
  - Proiect: -
- Număr de credite: 4

*** Procedura de evaluare a cunoștințelor
Examen
** Programare orientată obiect
*** Disciplina
Programare orientată obiect/Object-oriented programming

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
Concepte generale. Caracteristicile unui limbaj orientat pe
obiect. Programare orientată pe obiecte în C++. Clase şi
obiecte. Clase derivate. Utilizarea variabilelor globale sau a
funcţiilor globale în definirea funcţiilor membre a unor
clase. Funcţii inline. Functii de tipul prieten friend. Constructori
şi destructori. Referinţe. Membrii statici ai unei clase. Utilizarea
funcţiilor =width()=, =precision()= şi =fill()=. Supraîncărcarea
funcţiilor şi operatorilor. Funcţie operator.  Supraîncărcarea
operatorilor =<<= şi =>>=. Definirea de manipulatori
personalizaţi. Lucrul cu fişierele în C++. Prelucrare binară a
fişierelor. Lucrul aleatoriu cu fişierele. Cuvîntul cheie =this=.
Prevenirea redeclarării claselor. Tehnici de creare şi iniţializare a
obiectelor. Elemente despre preprocesare. Directive de compilare
condiţionată. Prevenirea redeclarării claselor. Programarea în Visual
C++. Crearea unui proiect. Fereastra interfeţei cu
utilizatorul. Efectuarea compilării şi a editării de
legături. Modificarea interfeţei aplicaţiei. Asocierea de cod cu
interfaţa. Salvarea şi închiderea proiectului. Utilizarea mediului
Developer Studio. Personalizarea mediului Developer
Studio. Deschiderea unui proiect existent. spaţiului de lucru ai
proiectului. Lucrul cu reprezentarea claselor. Resurse Visual
C++. Tipuri de resurse. Utilizarea controalelor. Lucrul cu imagini în
Visual C++. Lucrul cu fişiere în Visual C++. Elemente de grafică în
Visual C++
*** Bibliografia minimală obligatorie
- Culea George, /Programare orientată pe obiecte/, Note de curs + laborator, 2015
- Carol Britton, Jill Doake, /A student guide to Object-Oriented Development/, Elsevier, 2010
*** Fond de timp alocat pe forme de activitate
- Semestrul: 2
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 2 x 14 = 28
  - Proiect: -
- Număr de credite: 5

*** Procedura de evaluare a cunoștințelor
Examen


** Structuri de date
*** Disciplina
Structuri de date/Data structures

*** Statutul disciplinei
Obligatoriu

*** Precondiții
-
*** Conținutul disciplinei
1. Tablouri (Variabile tablou, tablouri cu parametri, tablouri de
   obiecte, accesul la tablou, alocarea memoriei)
2. Stive (Implementări, interfeţe, demonstraţii)
3. Cozi (Implementări, interfeţe, demonstraţii)
4. Liste înlănţuite (simplu, dublu, circulare: implementări, operaţii,
   demonstraţii).
5. Tabele de dispersie (dictionare, hashing)
6. Grafuri (conexe, orientate/neorientate)
7. Arbori (parcurgeri, aplicaţii)
*** Bibliografia minimală obligatorie
- Rodica Brînzei, /Proiectarea şi analiza algoritmilor/, Ed.Univ. “Al.I.Cuza” Iaşi, 1995.
- Thomas H.Cormen, Charles E.Leiserson, Ronald R.Rivest, /Introducere în Algoritmi/, Agora
Press, Traducere.
- Mitchell Wat şi Robert Lafere, /Structuri de date şi algoritmi in Java/, Teora, 1999.
- Ioan Tomescu, /Date structures/, Editura Universităţii din Bucureşti, 2004.
- M. Talmaciu, I. Furdu, /Algoritmi şi structuri de date/, note de curs, Ed. Alma Mater, 2008
   
*** Fond de timp alocat pe forme de activitate
- Semestrul: 1
- Forme de activitate/număr de ore:
  - Curs: 2 x 14 = 28
  - Seminar: -
  - Laborator: 1 x 14 = 14
  - Proiect: -
- Număr de credite: 5

*** Procedura de evaluare a cunoștințelor
Examen

